language: java
sudo: required
dist: trusty
jdk:
- oraclejdk8
env:
  matrix:
  - RUN_CROMWELL=true TEST_DOCKER=false TEST_M2_WDL=false
  - RUN_CROMWELL=false TEST_DOCKER=false TEST_M2_WDL=false
  - RUN_CROMWELL=false TEST_DOCKER=true TEST_M2_WDL=false
  - RUN_CROMWELL=false TEST_DOCKER=false TEST_M2_WDL=true
  global:
  #limit gradle jvm memory usage
  - GRADLE_OPTS=-Xmx512m

  - secure: Da9Brv5WKCE3z0bp5u52X1Rqul5C/r7idGj/yLhHnlEvHXPDQHaGXEQw4fNhRkB586lx6xilO8sra2FHoLDMKsqwE0h2+NKsrHQepTSFOR/fp/otoA/kiBue23ZfhsAEFn/uliVU36xLkt+LsyVqSKa+9JKDA5z1hXSemXGGVGw=
before_install:
# Added from hellbender public
- sudo mkdir -p /usr/local/lib/R/
- sudo mkdir -p site-library
- sudo ln -sFv ~/site-library /usr/local/lib/R/site-library
- sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9
- sudo add-apt-repository "deb http://cran.rstudio.com/bin/linux/ubuntu trusty/"
- sudo apt-get update
- sudo apt-get install -y --force-yes r-base-dev=3.1.3-1trusty
- sudo apt-get install -y --force-yes r-base-core=3.1.3-1trusty
- sudo Rscript scripts/install_R_packages.R
# Install git-lfs, and fetch the large test files
- sudo bash scripts/install_git_lfs.sh
# Download cromwell jar 
- if [[ $RUN_CROMWELL == true ]]; then
    wget -O ~/cromwell-0.19.3.jar https://github.com/broadinstitute/cromwell/releases/download/0.19.3/cromwell-0.19.3.jar;
  fi
- if [[ $TEST_M2_WDL == true ]]; then
    wget -O ~/cromwell-0.25.jar https://github.com/broadinstitute/cromwell/releases/download/25/cromwell-25.jar;
  fi

install:
- if [[ $RUN_CROMWELL == true ]]; then 
    ./gradlew shadowJar;
  elif [[$TEST_M2_WDL == true ]]; then
    ./gradlew shaowJar;
  elif [[$TEST_DOCKER == false ]]; then
    ./gradlew assemble;
  fi 

script:
- if [[ $RUN_CROMWELL == true ]]; then
    echo "Running ACNV pipeline";
    bash scripts/acnv_cromwell_tests/run_acnv_pipelines.sh;
  elif [[ $TEST_M2_WDL == true ]]; then
    echo "Building docker image for M2 WDL tests (skipping unit tests)...";
    HASH_TO_USE=`git rev-parse ${TRAVIS_BRANCH}`;
    cd scripts/docker/;
    echo "Building docker without running unit tests... =========";
    sudo bash build_docker.sh  -e $HASH_TO_USE -s -u;
    echo "Docker build done ==========";
    echo "Put the newly built docker image into the json parameters";
    sed -r "s/__M2_DOCKER__/broadinstitute\/gatk-protected\:$HASH_TO_USE/g" ../m2_cromwell_tests/test_m2_wdl_multi.json >/home/travis/build/broadinstitute/test_m2_wdl_multi_mod.json;
    echo "JSON FILE (modified) =======";
    cat /home/travis/build/broadinstitute/test_m2_wdl_multi_mod.json;
    echo "==================";
    echo "Running M2 WDL through cromwell";
    sudo bash ../m2_cromwell_tests/run_m2_wdl.sh;
    cat /home/travis/build/broadinstitute/test_m2_wdl.metadata;
  elif [[ $TEST_DOCKER == true ]]; then
    echo "Building docker image with unit tests...";
    cd scripts/docker/;
    sudo bash build_docker.sh  -e `git rev-parse ${TRAVIS_BRANCH}` -s;
  else
    ./gradlew check;
  fi

after_success:
- if [[ $RUN_CROMWELL == false ]] && [[ $TEST_DOCKER == false ]]; then
    ./gradlew jacocoTestReport coveralls;
  fi

after_failure:
- dmesg | tail -100
